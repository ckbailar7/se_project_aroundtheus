!function(){"use strict";var e=class{constructor(e,t){var o,r,i;o=this,i=()=>this._inputEls.every((e=>e.validity.valid)),(r=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(r="_checkFormValidity"))in o?Object.defineProperty(o,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):o[r]=i,this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButtonState(e){this._checkFormValidity(e)?(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1):(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(e)}))})),this._form.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleButtonState()}),0)}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};const t={inputSelector:".modal__container-input",submitButtonSelector:".modal__container-button",inactiveButtonClass:"modal__container-button_disabled",inputErrorClass:".modal__container-input_error",errorClass:"modal__container-input_error_visible"},o={imagePreview:"#image__preview",cardWrapper:".cards",profNameElementIdSelector:".profile__title",profDescriptionElementIdSelector:".profile__subtitle",cardSelector:"#card-template",likeCounterSelector:".card__like-counter",profileImage:document.querySelector(".profile__image"),profileImageSelector:".profile__image"},r={modalNameInput:document.querySelector("#modal-name"),modalDescriptionInput:document.querySelector("#modal-description"),modalPictureEditInput:document.querySelector("#modal-pictureUrl-input"),modalContainer:document.querySelector(".modal"),modalAddPopup:document.querySelector(".modal_type_add"),modalEditProfilePictureForm:document.querySelector(".modal_type_edit-picture"),modalButtonOpen:document.querySelector(".profile__title-button"),modalAddButtonOpen:document.querySelector(".profile__button"),modalSubmitButton:document.querySelector(".modal__container-button")},i={profileDescriptionElement:document.querySelector(".profile__subtitle"),profilePictureOverlaySelector:document.querySelector(".profile__image-overlay"),profilePictureOverlayImageSelector:document.querySelector(".profile__image-overlay-image"),profilePictureOverlaySelectorActive:"profile__image-overlay-active",profileNameElement:document.querySelector(".profile__title"),profileImageChangeOpaque:"profile__image-opaque"};class n{constructor(e,t){let{items:o,renderer:r}=e;this._items=o,this._renderer=r,this._container=document.querySelector(t),this._likeElement=this._container.querySelector(".card__like-counter")}renderItems(){this._items.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class s{constructor(e){var t,o,r;t=this,r=e=>{e.target.classList.contains("modal")&&this.closeModal()},(o=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(o="_handleOverlayClose"))in t?Object.defineProperty(t,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[o]=r,this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__button"),this._handleEscClose=this._handleEscClose.bind(this)}openModal(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.closeModal()}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.closeModal())),this._popupElement.addEventListener("mousedown",this._handleOverlayClose)}}class a extends s{constructor(e,t){var o,r,i;super(e),o=this,i=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())},(r=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(r="_handleSubmit"))in o?Object.defineProperty(o,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):o[r]=i,this._handleFormSubmit=t,this._modalForm=this._popupElement.querySelector(".modal__form"),this._modalFormInputs=this._popupElement.querySelectorAll(".modal__container-input"),this._modalFormButton=this._popupElement.querySelector(".modal__container-button"),this._submitButton=this._popupElement.querySelector("#submit-button")}_getInputValues(){const e={};return this._modalFormInputs.forEach((t=>e[t.name]=t.value)),e}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",this._handleSubmit)}closeModal(){super.closeModal(),this._modalForm.reset()}isLoading(){this._modalFormButton.textContent="Saving..."}isFinishedLoading(){setTimeout((()=>{}),5e3),this._modalFormButton.textContent="Create"}isFinishedLoadingForEdit(){setTimeout((()=>{}),5e3),this._modalFormButton.textContent="Save"}isFinishedLoadingForDelete(){setTimeout((()=>{}),5e3),this._modalFormButton.textContent="Yes"}}const l=new class{constructor(e,t,o){this._profileNameElement=document.querySelector(e),this._profileDescriptionSelector=document.querySelector(t),this._avatarSelector=document.querySelector(o)}setUserInfo(e,t){this._profileNameElement.textContent=e,this._profileDescriptionSelector.textContent=t}setAvatarInfo(e){this._avatarSelector.src=e}getUserInfo(){return{name:this._profileNameElement.textContent,description:this._profileDescriptionSelector.textContent,avatar:this._avatarSelector.textContent}}}(o.profNameElementIdSelector,o.profDescriptionElementIdSelector,o.profileImageSelector),c=new class{constructor(e){let{baseUrl:t,authToken:o}=e;this._baseUrl=t,this._authToken=o}getData(){return Promise.all([this.getUserInfo(),this.getCardList()])}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._authToken}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}getCardList(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:this._authToken}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}updateUserInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}updateProfilePicture(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}addCard(e){let{name:t,link:o}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:o})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:{authorization:this._authToken,"Content-Type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}getLikesLength(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:{authorization:this._authToken}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{console.log("This is From Api.js: Number of likes on current card : ===>   "+e.likes.length)})).catch((e=>{console.log(e)}))}addLike(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:{authorization:this._authToken}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>e)).catch((e=>{console.log(e)}))}removeLike(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:{authorization:this._authToken}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>e)).catch((e=>{console.log(e)}))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",authToken:"539f93f7-dc05-45c3-9b88-f97ff528fbfa"});let d;function u(e){const t=new class{constructor(e,t){let{data:o,handleCardClick:r,handleDeleteCardClick:i,handleLikeClick:n,handleOnLoadDeleteBtnSet:s}=e;this._data=o,this._name=o.name,this._link=o.link,this._cardSelector=t,this._id=o.id,this._likeAmount=o.likes,this._handleDeleteCardClick=i,this._handleCardClick=r,this._handleLikeClick=n,this._handleOnLoadDeleteBtnSet=s}setLikeCounter(e){this._likeCounter.textContent=e.likes.length}addLike(){this._likeButton.classList.add("card__likebtn-change")}removeLike(){this._likeButton.classList.remove("card__likebtn-change")}addTrashIcon(){this._trashIcon.classList.remove("card__deletebtn-nonactive")}removeTrashIcon(){this._trashIcon.classList.add("card__deletebtn-nonactive")}removeCard(){this._element.remove()}_handleLikeIcon(){this._element.querySelector(".card__likebtn").classList.toggle("card__likebtn-change")}_handleDeleteBtn(){this._element.remove()}_handleImagePopup(){this._handleCardClick({name:this._name,link:this._link})}_checkLikeStatus(){return!!this._likeButton.classList.contains("card__likebtn-change")}_checkIdforLike(e){e.forEach((e=>{"f978e887083bb5087ebbe974"===e._id?this.addLike():this.removeLike()}))}_checkIdForDeleteIcon(e){"f978e887083bb5087ebbe974"===e.owner._id?this.addTrashIcon():this.removeTrashIcon()}_setEventListeners(){this._element.querySelector(".card__likebtn").addEventListener("click",(()=>{this._handleLikeIcon(),this._handleLikeClick()})),this._element.querySelector(".card__deletebtn").addEventListener("click",(()=>{this._handleDeleteCardClick()})),this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handleImagePopup()}))}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__name").textContent=this._name,this._element.querySelector(".card__image").alt=this._name,this._likeCounter=this._element.querySelector(".card__like-counter"),this._likeButton=this._element.querySelector(".card__likebtn"),this._trashIcon=this._element.querySelector(".card__deletebtn"),this._likeCounter.textContent=this._likeAmount.length,this._setEventListeners(),this._checkIdforLike(this._likeAmount),this._checkIdForDeleteIcon(this._data),this._element}getCardLikes(e){console.log(e.likes)}}({data:e,handleCardClick:()=>{h.openModal(e)},handleDeleteCardClick:()=>{m.openModal(),m.setSubmitAction((()=>{m.isLoading(),c.removeCard(e._id).then((()=>{t.removeCard()})).finally((()=>{m.isFinishedLoading(),m.closeModal()}))}))},handleLikeClick:()=>{t._checkLikeStatus()?c.addLike(e._id).then((e=>{t.setLikeCounter(e),t.addLike()})):c.removeLike(e._id).then((e=>{t.setLikeCounter(e),t.removeLike()}))}},o.cardSelector);return t.getView()}c.getData().then((e=>{let[t,r]=e;l.setUserInfo(t.name,t.about),l.setAvatarInfo(t.avatar),d=new n({items:r,renderer:e=>{const t=u(e);d.addItem(t)}},o.cardWrapper),d.renderItems()})),r.modalButtonOpen.addEventListener("click",(()=>{(function(){const{name:e,description:t,avatar:o}=l.getUserInfo();r.modalNameInput.value=e,r.modalDescriptionInput.value=t})(),g.openModal()})),r.modalAddButtonOpen.addEventListener("click",(()=>{S.openModal()})),o.profileImage.addEventListener("click",(()=>{r.modalPictureEditInput.value=o.profileImage.src,E.openModal()})),o.profileImage.addEventListener("mouseover",(()=>{i.profilePictureOverlaySelector.classList.add(i.profilePictureOverlaySelectorActive),o.profileImage.classList.add(i.profileImageChangeOpaque)})),o.profileImage.addEventListener("mouseout",(()=>{i.profilePictureOverlaySelector.classList.remove(i.profilePictureOverlaySelectorActive),o.profileImage.classList.remove(i.profileImageChangeOpaque)}));const h=new class extends s{constructor(e){super(e),this.cardPreviewTitle=this._popupElement.querySelector(".modal__caption")}openModal(e){let{link:t,name:o}=e;this._popupElement.querySelector("#popup__image").src=t,this._popupElement.querySelector("#popup__image").alt=o,this.cardPreviewTitle.textContent=o,super.openModal()}}(o.imagePreview);h.setEventListeners();const m=new class extends s{constructor(e){super(e),this._delBTN=this._popupElement.querySelector(".modal__container-button"),this._deleteYesButton=this._popupElement.querySelector("#delete-yesbtn")}setSubmitAction(e){this._handleDeleteSubmit=e}setEventListeners(){super.setEventListeners(),this._delBTN.addEventListener("click",(()=>{this._handleDeleteSubmit()}))}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}isLoading(){this._deleteYesButton.textContent="Deleting ..."}isFinishedLoading(){setTimeout((()=>{}),5e3),this._deleteYesButton.textContent="Yes"}}(".modal_type_delete");m.setEventListeners();const _=r.modalContainer.querySelector(".modal__container"),p=r.modalAddPopup.querySelector(".modal__container"),v=r.modalEditProfilePictureForm.querySelector(".modal__container"),f=new e(t,_),k=new e(t,p),y=new e(t,v);f.enableValidation(),k.enableValidation(),y.enableValidation();const S=new a(".modal_type_add",(e=>{S.isLoading(),c.addCard(e).then((e=>{const t=u(e);d.addItem(t)})).then((()=>{S.isFinishedLoading()})).finally((()=>{S.closeModal()}))}));S.setEventListeners();const g=new a(".modal_type_edit",(e=>{g.isLoading(),c.updateUserInfo(e.name,e.description).then((()=>{l.setUserInfo(e.name,e.description)})).finally((()=>{g.isFinishedLoadingForEdit(),g.closeModal()}))}));g.setEventListeners();const E=new a(".modal_type_edit-picture",(e=>{E.isLoading(),c.updateProfilePicture(e.link).then((()=>{o.profileImage.src=e.link})).then((()=>{E.isFinishedLoadingForEdit()})).finally((()=>{E.closeModal()}))}));E.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,