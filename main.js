!function(){"use strict";var e=class{constructor(e,t){var n,o,r;n=this,r=()=>this._inputEls.every((e=>e.validity.valid)),(o=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(o="_checkFormValidity"))in n?Object.defineProperty(n,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[o]=r,this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButtonState(e){this._checkFormValidity(e)?(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1):(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(e)}))})),this._form.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleButtonState()}),0)}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};const t={inputSelector:".modal__container-input",submitButtonSelector:".modal__container-button",inactiveButtonClass:"modal__container-button_disabled",inputErrorClass:".modal__container-input_error",errorClass:"modal__container-input_error_visible"},n={modalNameInput:document.querySelector("#modal-name"),modalDescriptionInput:document.querySelector("#modal-description"),modalContainer:document.querySelector(".modal"),modalAddPopup:document.querySelector(".modal_type_add"),modalButtonOpen:document.querySelector(".profile__title-button"),modalAddButtonOpen:document.querySelector(".profile__button")};document.querySelector(".profile__subtitle"),document.querySelector(".profile__title");class o{constructor(e){var t,n,o;t=this,o=e=>{e.target.classList.contains("modal")&&this.closeModal()},(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(n="_handleOverlayClose"))in t?Object.defineProperty(t,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[n]=o,this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__button"),this._handleEscClose=this._handleEscClose.bind(this)}openModal(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.closeModal()}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.closeModal())),this._popupElement.addEventListener("mousedown",this._handleOverlayClose)}}class r extends o{constructor(e,t){var n,o,r;super(e),n=this,r=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())},(o=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(o="_handleSubmit"))in n?Object.defineProperty(n,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[o]=r,this._handleFormSubmit=t,this._modalForm=this._popupElement.querySelector(".modal__form"),this._modalFormInputs=this._popupElement.querySelectorAll(".modal__container-input"),this._modalFormButton=this._popupElement.querySelector("modal__container-button")}_getInputValues(){const e={};return this._modalFormInputs.forEach((t=>e[t.name]=t.value)),e}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",this._handleSubmit)}closeModal(){super.closeModal(),this._modalForm.reset()}}const i=new class extends o{constructor(e){super(e),this.cardPreviewTitle=this._popupElement.querySelector(".modal__caption")}openModal(e){let{link:t,name:n}=e;this._popupElement.querySelector("#popup__image").src=t,this._popupElement.querySelector("#popup__image").alt=n,this.cardPreviewTitle.textContent=n,super.openModal()}}("#image__preview");function s(e){const t=new class{constructor(e,t,n){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleCardClick=n}_handleLikeIcon(){this._element.querySelector(".card__likebtn").classList.toggle("card__likebtn-change")}_handleDeleteBtn(){this._element.remove()}_handleImagePopup(){this._handleCardClick({name:this._name,link:this._link})}_setEventListeners(){this._element.querySelector(".card__likebtn").addEventListener("click",(()=>{this._handleLikeIcon()})),this._element.querySelector(".card__deletebtn").addEventListener("click",(()=>{this._handleDeleteBtn()})),this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handleImagePopup()}))}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__name").textContent=this._name,this._element.querySelector(".card__image").alt=this._name,this._setEventListeners(),this._element}}(e,"#card-template",(e=>{i.openModal(e)}));return t.getView()}i.setEventListeners();const l=new class{constructor(e,t){let{items:n,renderer:o}=e;this._items=n,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{const t=s(e);l.addItem(t)}},".cards");l.renderItems(),n.modalButtonOpen.addEventListener("click",(()=>{(function(){const{name:e,description:t}=p.getUserInfo();n.modalNameInput.value=e,n.modalDescriptionInput.value=t})(),_.openModal()})),n.modalAddButtonOpen.addEventListener("click",(()=>{m.openModal()}));const a=n.modalContainer.querySelector(".modal__container"),c=n.modalAddPopup.querySelector(".modal__container"),d=new e(t,a),u=new e(t,c);d.enableValidation(),u.enableValidation();const m=new r(".modal_type_add",(e=>{const t=s(e);l.addItem(t),m.closeModal()}));m.setEventListeners();const _=new r(".modal_type_edit",(e=>{_.closeModal(),p.setUserInfo(e.name,e.description)}));_.setEventListeners();const p=new class{constructor(e,t){this._profileNameElement=document.querySelector(e),this._profileDescriptionSelector=document.querySelector(t)}setUserInfo(e,t){this._profileNameElement.textContent=e,this._profileDescriptionSelector.textContent=t}getUserInfo(){return{name:this._profileNameElement.textContent,description:this._profileDescriptionSelector.textContent}}}(".profile__title",".profile__subtitle")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Y2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpIHtcbiAgICB0aGlzLl9mb3JtID0gZm9ybUVsZW1lbnQ7XG5cbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBzZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzcztcbiAgfVxuXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsKSB7XG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBpbnB1dEVsLnZhbGlkYXRpb25NZXNzYWdlO1xuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XG4gIH1cblxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbCkge1xuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKSB7XG4gICAgaWYgKCFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XG4gICAgfVxuICB9XG5cbiAgX2NoZWNrRm9ybVZhbGlkaXR5ID0gKCkgPT4ge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dEVscy5ldmVyeSgoaW5wdXQpID0+IGlucHV0LnZhbGlkaXR5LnZhbGlkKTtcbiAgfTtcblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRFbCkge1xuICAgIGNvbnN0IGlzVmFsaWQgPSB0aGlzLl9jaGVja0Zvcm1WYWxpZGl0eShpbnB1dEVsKTtcbiAgICBpZiAoIWlzVmFsaWQpIHtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2lucHV0RWxzID0gWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xuICAgICAgaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGUpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dEVsKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInJlc2V0XCIsICgpID0+IHtcbiAgICAgIC8vc2V0IFRpbWVvdXRcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgfSwgMCk7XG4gICAgfSk7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7XG4iLCJleHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xuICB7XG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3lvc2VtaXRlLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9iYWxkLW1vdW50YWlucy5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS92YW5vaXNlLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFnby5qcGdcIixcbiAgfSxcbl07XG5cbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uU2V0dGluZ3MgPSB7XG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19jb250YWluZXItaW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19jb250YWluZXItYnV0dG9uXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2NvbnRhaW5lci1idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIi5tb2RhbF9fY29udGFpbmVyLWlucHV0X2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2NvbnRhaW5lci1pbnB1dF9lcnJvcl92aXNpYmxlXCIsXG59O1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0b3JzID0ge1xuICBpbWFnZVByZXZpZXc6IFwiI2ltYWdlX19wcmV2aWV3XCIsXG4gIGNhcmRXcmFwcGVyOiBcIi5jYXJkc1wiLFxuICBwcm9mTmFtZUVsZW1lbnRJZFNlbGVjdG9yOiBcIi5wcm9maWxlX190aXRsZVwiLFxuICBwcm9mRGVzY3JpcHRpb25FbGVtZW50SWRTZWxlY3RvcjogXCIucHJvZmlsZV9fc3VidGl0bGVcIixcbiAgY2FyZFNlbGVjdG9yOiBcIiNjYXJkLXRlbXBsYXRlXCIsXG59O1xuXG5leHBvcnQgY29uc3QgbW9kYWxTZWxlY3RvcnMgPSB7XG4gIG1vZGFsTmFtZUlucHV0OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vZGFsLW5hbWVcIiksXG4gIG1vZGFsRGVzY3JpcHRpb25JbnB1dDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtb2RhbC1kZXNjcmlwdGlvblwiKSxcbiAgbW9kYWxDb250YWluZXI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxcIiksXG4gIG1vZGFsQWRkUG9wdXA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfdHlwZV9hZGRcIiksXG4gIG1vZGFsQnV0dG9uT3BlbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX190aXRsZS1idXR0b25cIiksXG4gIG1vZGFsQWRkQnV0dG9uT3BlbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19idXR0b25cIiksXG59O1xuXG5leHBvcnQgY29uc3QgcHJvZmlsZVNlbGVjdG9ycyA9IHtcbiAgcHJvZmlsZURlc2NyaXB0aW9uRWxlbWVudDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19zdWJ0aXRsZVwiKSxcblxuICBwcm9maWxlTmFtZUVsZW1lbnQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdGl0bGVcIiksXG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b25cIik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgb3Blbk1vZGFsKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBjbG9zZU1vZGFsKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBfaGFuZGxlT3ZlcmxheUNsb3NlID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsXCIpKSB7XG4gICAgICB0aGlzLmNsb3NlTW9kYWwoKTtcbiAgICB9XG4gIH07XG5cbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlTW9kYWwoKTtcbiAgICB9XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5jbG9zZU1vZGFsKCkpO1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMuX2hhbmRsZU92ZXJsYXlDbG9zZSk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuXG4gICAgdGhpcy5fbW9kYWxGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG4gICAgdGhpcy5fbW9kYWxGb3JtSW5wdXRzID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgICBcIi5tb2RhbF9fY29udGFpbmVyLWlucHV0XCJcbiAgICApO1xuICAgIHRoaXMuX21vZGFsRm9ybUJ1dHRvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCJtb2RhbF9fY29udGFpbmVyLWJ1dHRvblwiXG4gICAgKTtcbiAgfVxuXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcbiAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHt9O1xuXG4gICAgdGhpcy5fbW9kYWxGb3JtSW5wdXRzLmZvckVhY2goXG4gICAgICAoaW5wdXQpID0+IChpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlKVxuICAgICk7XG4gICAgcmV0dXJuIGlucHV0VmFsdWVzO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9tb2RhbEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCB0aGlzLl9oYW5kbGVTdWJtaXQpO1xuICB9XG5cbiAgX2hhbmRsZVN1Ym1pdCA9IChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICB9O1xuXG4gIGNsb3NlTW9kYWwoKSB7XG4gICAgc3VwZXIuY2xvc2VNb2RhbCgpO1xuICAgIHRoaXMuX21vZGFsRm9ybS5yZXNldCgpO1xuICB9XG59XG4iLCJpbXBvcnQgXCIuLi9wYWdlcy9pbmRleC5jc3NcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCB7XG4gIGluaXRpYWxDYXJkcyxcbiAgdmFsaWRhdGlvblNldHRpbmdzLFxuICBzZWxlY3RvcnMsXG4gIHByb2ZpbGVTZWxlY3RvcnMsXG4gIG1vZGFsU2VsZWN0b3JzLFxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFNlbGVjdG9ycyAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogICAgICAgICAgICAgICAgICAgIFBvcHVwV2l0aEltYWdlIEluc3RhbmNlICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmNvbnN0IHByZXZpZXdQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShzZWxlY3RvcnMuaW1hZ2VQcmV2aWV3KTtcbnByZXZpZXdQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qICAgICAgICAgICAgICAgICAgICBSZW5kZXIgQ2FyZHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5mdW5jdGlvbiByZW5kZXJDYXJkKGRhdGEpIHtcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGRhdGEsIHNlbGVjdG9ycy5jYXJkU2VsZWN0b3IsIChkYXRhKSA9PiB7XG4gICAgcHJldmlld1BvcHVwLm9wZW5Nb2RhbChkYXRhKTtcbiAgfSk7XG4gIHJldHVybiBjYXJkLmdldFZpZXcoKTtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiAgICAgICAgICAgICAgICAgICAgTmV3IFNlY3Rpb24gSW5zdGFuY2UgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuY29uc3Qgc2VjdGlvbkNhcmQgPSBuZXcgU2VjdGlvbihcbiAge1xuICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXG5cbiAgICByZW5kZXJlcjogKGRhdGEpID0+IHtcbiAgICAgIGNvbnN0IGNhcmQgPSByZW5kZXJDYXJkKGRhdGEpO1xuICAgICAgc2VjdGlvbkNhcmQuYWRkSXRlbShjYXJkKTtcbiAgICB9LFxuICB9LFxuXG4gIHNlbGVjdG9ycy5jYXJkV3JhcHBlclxuKTtcblxuc2VjdGlvbkNhcmQucmVuZGVySXRlbXMoKTtcblxuLy9PcGVuIE1vZGFsIFBvcHVwXG5tb2RhbFNlbGVjdG9ycy5tb2RhbEJ1dHRvbk9wZW4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgb3BlblByb2ZpbGVGb3JtKCk7XG59KTtcblxuLy9PcGVuIE1vZGFsIEFkZCBCdXR0b25cbm1vZGFsU2VsZWN0b3JzLm1vZGFsQWRkQnV0dG9uT3Blbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBjYXJkTW9kYWwub3Blbk1vZGFsKCk7XG59KTtcblxuLy8vIFJldmlld2VycyBHaXZlbiBDb2RlIC8vLy9cblxuZnVuY3Rpb24gZmlsbFByb2ZpbGVGb3JtKCkge1xuICBjb25zdCB7IG5hbWUsIGRlc2NyaXB0aW9uIH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBtb2RhbFNlbGVjdG9ycy5tb2RhbE5hbWVJbnB1dC52YWx1ZSA9IG5hbWU7XG4gIG1vZGFsU2VsZWN0b3JzLm1vZGFsRGVzY3JpcHRpb25JbnB1dC52YWx1ZSA9IGRlc2NyaXB0aW9uO1xufVxuXG5mdW5jdGlvbiBvcGVuUHJvZmlsZUZvcm0oKSB7XG4gIGZpbGxQcm9maWxlRm9ybSgpO1xuICBwcm9maWxlVXBkYXRlRm9ybS5vcGVuTW9kYWwoKTtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICBWYWxpZGF0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5jb25zdCBlZGl0Rm9ybUVsZW1lbnQgPVxuICBtb2RhbFNlbGVjdG9ycy5tb2RhbENvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jb250YWluZXJcIik7XG5jb25zdCBhZGRGb3JtRWxlbWVudCA9XG4gIG1vZGFsU2VsZWN0b3JzLm1vZGFsQWRkUG9wdXAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY29udGFpbmVyXCIpO1xuXG5jb25zdCBlZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICB2YWxpZGF0aW9uU2V0dGluZ3MsXG4gIGVkaXRGb3JtRWxlbWVudFxuKTtcbmNvbnN0IGFkZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uU2V0dGluZ3MsIGFkZEZvcm1FbGVtZW50KTtcblxuZWRpdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuYWRkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiAgICAgICAgTmV3IEluc3RhbmNlcyBvZiBQb3B1cFdpdGhGb3JtICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qICAgICAgSW5zdGFuY2UgZm9yIHBvcHVwIEFERCBmb3JtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5jb25zdCBjYXJkTW9kYWwgPSBuZXcgUG9wdXBXaXRoRm9ybShcIi5tb2RhbF90eXBlX2FkZFwiLCAoZGF0YSkgPT4ge1xuICBjb25zdCBuZXdVc2VyQ3JlYXRlZENhcmQgPSByZW5kZXJDYXJkKGRhdGEpO1xuICBzZWN0aW9uQ2FyZC5hZGRJdGVtKG5ld1VzZXJDcmVhdGVkQ2FyZCk7XG5cbiAgY2FyZE1vZGFsLmNsb3NlTW9kYWwoKTtcbn0pO1xuY2FyZE1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogICAgICAgIEluc3RhbmNlIGZvciBwb3B1cCBFZGl0IGZvcm0gICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5jb25zdCBwcm9maWxlVXBkYXRlRm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiLm1vZGFsX3R5cGVfZWRpdFwiLCAoZGF0YSkgPT4ge1xuICBwcm9maWxlVXBkYXRlRm9ybS5jbG9zZU1vZGFsKCk7XG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKGRhdGEubmFtZSwgZGF0YS5kZXNjcmlwdGlvbik7XG59KTtcbnByb2ZpbGVVcGRhdGVGb3JtLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKFxuICBzZWxlY3RvcnMucHJvZk5hbWVFbGVtZW50SWRTZWxlY3RvcixcbiAgc2VsZWN0b3JzLnByb2ZEZXNjcmlwdGlvbkVsZW1lbnRJZFNlbGVjdG9yXG4pO1xuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuXG4gICAgdGhpcy5jYXJkUHJldmlld1RpdGxlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIik7XG4gIH1cblxuICBvcGVuTW9kYWwoeyBsaW5rLCBuYW1lIH0pIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIiNwb3B1cF9faW1hZ2VcIikuc3JjID0gbGluaztcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIiNwb3B1cF9faW1hZ2VcIikuYWx0ID0gbmFtZTtcbiAgICB0aGlzLmNhcmRQcmV2aWV3VGl0bGUudGV4dENvbnRlbnQgPSBuYW1lO1xuXG4gICAgc3VwZXIub3Blbk1vZGFsKCk7XG4gIH1cbn1cbiIsImNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihkYXRhLCBjYXJkU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaykge1xuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XG5cbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gIH1cblxuICAvLyBIYW5kbGVyc1xuICBfaGFuZGxlTGlrZUljb24oKSB7XG4gICAgdGhpcy5fZWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZWJ0blwiKVxuICAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19saWtlYnRuLWNoYW5nZVwiKTtcbiAgfVxuICBfaGFuZGxlRGVsZXRlQnRuKCkge1xuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XG4gIH1cbiAgX2hhbmRsZUltYWdlUG9wdXAoKSB7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHsgbmFtZTogdGhpcy5fbmFtZSwgbGluazogdGhpcy5fbGluayB9KTtcbiAgfVxuXG4gIC8vIFNldHRpbmcgRXZlbnQgTGlzdGVuZXJzXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAvLyBMaWtlIEJ0biBMaXN0ZW5lclxuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2VidG5cIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9oYW5kbGVMaWtlSWNvbigpO1xuICAgICAgfSk7XG4gICAgLy8gRGVsZXRlIEJ1dHRvbiBMaXN0ZW5lclxuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZWJ0blwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUJ0bigpO1xuICAgICAgfSk7XG4gICAgLy9JbWFnZSBDbGljayBQb3B1cCBMaXN0ZW5lclxuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5faGFuZGxlSW1hZ2VQb3B1cCgpO1xuICAgICAgfSk7XG4gIH1cblxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xuICB9XG4gIC8vIENyZWF0aW5nIC8gR2V0dGluZyBDYXJkc1xuICBnZXRWaWV3KCkge1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19uYW1lXCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIikuYWx0ID0gdGhpcy5fbmFtZTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDYXJkO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICB9XG5cbiAgcmVuZGVySXRlbXMoKSB7XG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgfSk7XG4gIH1cblxuICBhZGRJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufVxuIiwiaW1wb3J0IFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IocHJvZmlsZU5hbWVTZWxlY3RvciwgcHJvZmlsZURlc2NyaXB0aW9uU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wcm9maWxlTmFtZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVOYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX3Byb2ZpbGVEZXNjcmlwdGlvblNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIHByb2ZpbGVEZXNjcmlwdGlvblNlbGVjdG9yXG4gICAgKTtcbiAgfVxuXG4gIHNldFVzZXJJbmZvKHVzZXJOYW1lLCBkZXNjcmlwdGlvbikge1xuICAgIHRoaXMuX3Byb2ZpbGVOYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IHVzZXJOYW1lO1xuICAgIHRoaXMuX3Byb2ZpbGVEZXNjcmlwdGlvblNlbGVjdG9yLnRleHRDb250ZW50ID0gZGVzY3JpcHRpb247XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5fcHJvZmlsZU5hbWVFbGVtZW50LnRleHRDb250ZW50LFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuX3Byb2ZpbGVEZXNjcmlwdGlvblNlbGVjdG9yLnRleHRDb250ZW50LFxuICAgIH07XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJ0aGlzIiwiX2lucHV0RWxzIiwiZXZlcnkiLCJpbnB1dCIsInZhbGlkaXR5IiwidmFsaWQiLCJfZm9ybSIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWwiLCJlcnJvck1lc3NhZ2VFbCIsInF1ZXJ5U2VsZWN0b3IiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IiLCJyZW1vdmUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiX2NoZWNrRm9ybVZhbGlkaXR5IiwiX2J1dHRvbkVsZW1lbnQiLCJkaXNhYmxlZCIsIl9zZXRFdmVudExpc3RlbmVycyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJzZXRUaW1lb3V0IiwiZW5hYmxlVmFsaWRhdGlvbiIsInByZXZlbnREZWZhdWx0IiwidmFsaWRhdGlvblNldHRpbmdzIiwibW9kYWxTZWxlY3RvcnMiLCJtb2RhbE5hbWVJbnB1dCIsImRvY3VtZW50IiwibW9kYWxEZXNjcmlwdGlvbklucHV0IiwibW9kYWxDb250YWluZXIiLCJtb2RhbEFkZFBvcHVwIiwibW9kYWxCdXR0b25PcGVuIiwibW9kYWxBZGRCdXR0b25PcGVuIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiZXZ0IiwidGFyZ2V0IiwiY29udGFpbnMiLCJjbG9zZU1vZGFsIiwiX3BvcHVwRWxlbWVudCIsIl9jbG9zZUJ1dHRvbiIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJvcGVuTW9kYWwiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJfaGFuZGxlT3ZlcmxheUNsb3NlIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2dldElucHV0VmFsdWVzIiwiX21vZGFsRm9ybSIsIl9tb2RhbEZvcm1JbnB1dHMiLCJfbW9kYWxGb3JtQnV0dG9uIiwiaW5wdXRWYWx1ZXMiLCJuYW1lIiwidmFsdWUiLCJfaGFuZGxlU3VibWl0IiwicmVzZXQiLCJwcmV2aWV3UG9wdXAiLCJjYXJkUHJldmlld1RpdGxlIiwibGluayIsInNyYyIsImFsdCIsInJlbmRlckNhcmQiLCJkYXRhIiwiY2FyZCIsImNhcmRTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsIl9uYW1lIiwiX2xpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVMaWtlSWNvbiIsIl9lbGVtZW50IiwidG9nZ2xlIiwiX2hhbmRsZURlbGV0ZUJ0biIsIl9oYW5kbGVJbWFnZVBvcHVwIiwiX2dldFRlbXBsYXRlIiwiY29udGVudCIsImNsb25lTm9kZSIsImdldFZpZXciLCJzZWN0aW9uQ2FyZCIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsIml0ZW0iLCJhZGRJdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJkZXNjcmlwdGlvbiIsInVzZXJJbmZvIiwiZ2V0VXNlckluZm8iLCJmaWxsUHJvZmlsZUZvcm0iLCJwcm9maWxlVXBkYXRlRm9ybSIsImNhcmRNb2RhbCIsImVkaXRGb3JtRWxlbWVudCIsImFkZEZvcm1FbGVtZW50IiwiZWRpdEZvcm1WYWxpZGF0b3IiLCJGb3JtVmFsaWRhdG9yIiwiYWRkRm9ybVZhbGlkYXRvciIsIm5ld1VzZXJDcmVhdGVkQ2FyZCIsInNldFVzZXJJbmZvIiwicHJvZmlsZU5hbWVTZWxlY3RvciIsInByb2ZpbGVEZXNjcmlwdGlvblNlbGVjdG9yIiwiX3Byb2ZpbGVOYW1lRWxlbWVudCIsIl9wcm9maWxlRGVzY3JpcHRpb25TZWxlY3RvciIsInVzZXJOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==